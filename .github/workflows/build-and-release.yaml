name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install MinGW-w64
        # The mingw-w64-i686-dev package will be installed from a specific .deb in the next step
        run: sudo apt-get install -y g++-mingw-w64-i686 mingw-w64-i686-dev

      #- name: Download and install mingw-w64-i686-dev package
      #  run: |
      #    wget http://ftp.de.debian.org/debian/pool/main/m/mingw-w64/mingw-w64-i686-dev_12.0.0-5_all.deb
      #    sudo dpkg -i mingw-w64-i686-dev_12.0.0-5_all.deb
      #    rm mingw-w64-i686-dev_12.0.0-5_all.deb

      #echo "Searching for libwinpthread.a..."
      #sudo find / -name libwinpthread.a 2>/dev/null
      #/usr/i686-w64-mingw32/lib/libwinpthread.a

      - name: Download and install additional libraries
        run: |
          # Create a temporary directory for the download
          mkdir temp_deb
          cd temp_deb
          
          # Download the .deb file
          wget http://ftp.de.debian.org/debian/pool/main/m/mingw-w64/mingw-w64-i686-dev_12.0.0-5_all.deb
          
          # Extract the .deb file
          dpkg-deb -x mingw-w64-i686-dev_12.0.0-5_all.deb .
          
          # Move the required files to the MinGW-w64 library directory
          sudo mv usr/i686-w64-mingw32/lib/libwinpthread.dll.a /usr/i686-w64-mingw32/lib/
          sudo mv usr/i686-w64-mingw32/lib/libwinpthread-1.dll /usr/i686-w64-mingw32/lib/
          sudo mv usr/i686-w64-mingw32/lib/libwinpthread.a /usr/i686-w64-mingw32/lib/
          
          # Clean up the temporary directory
          cd ..
          rm -rf temp_deb

      - name: Compile Code
        run: make clean

      - name: Make
        run: make

      - name: Prepare Release
        run: |
          zip release_windows.zip bin/sof_buddy.dll rsrc/win_scripts/patch_sof_binary.ps1 rsrc/win_scripts/set_sofplus_and_buddy_sof.cmd rsrc/win_scripts/set_sofplus_sof.cmd rsrc/win_scripts/set_vanilla_sof.cmd
          zip release_linux_wine.zip bin/sof_buddy.dll rsrc/lin_scripts/patch_sof_binary.sh rsrc/lin_scripts/set_sofplus_and_buddy_sof.sh rsrc/lin_scripts/set_sofplus_sof.sh rsrc/lin_scripts/set_vanilla_sof.sh
        working-directory: ${{ github.workspace }}

      - name: Upload Windows Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-windows-artifact
          path: release_windows.zip

      - name: Upload Linux Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-linux-artifact
          path: release_linux_wine.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Windows Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-windows-artifact
          path: windows_release
          extract: false

      - name: Download Linux Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-linux-artifact
          path: linux_release
          extract: false

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows_release/release_windows.zip
          asset_name: release_windows.zip
          asset_content_type: application/zip


      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux_release/release_linux_wine.zip
          asset_name: release_linux_wine.zip
          asset_content_type: application/zip
